
http://redis.readthedocs.io/en/2.4/index.html

---------------键命令---------------------------
编号 	命令 	描述
1 	DEL key 	此命令删除一个指定键(如果存在)。
2 	DUMP key 	此命令返回存储在指定键的值的序列化版本。
3 	EXISTS key 	此命令检查键是否存在。
4 	EXPIRE key seconds 	设置键在指定时间秒数之后到期/过期。
5 	EXPIREAT key timestamp 	设置在指定时间戳之后键到期/过期。这里的时间是Unix时间戳格式。
6 	PEXPIRE key milliseconds 	设置键的到期时间(以毫秒为单位)。
7 	PEXPIREAT key milliseconds-timestamp 	以Unix时间戳形式来设置键的到期时间(以毫秒为单位)。
8 	KEYS pattern 	查找与指定模式匹配的所有键。
9 	MOVE key db 	将键移动到另一个数据库。
10 	PERSIST key 	删除指定键的过期时间，得永生。
11 	PTTL key 	获取键的剩余到期时间。
12 	RANDOMKEY 	从Redis返回一个随机的键。
13 	RENAME key newkey 	更改键的名称。
14 	PTTL key 	获取键到期的剩余时间(以毫秒为单位)。
15 	RENAMENX key newkey 	如果新键不存在，重命名键。
16 	TYPE key 	返回存储在键中的值的数据类型。

################字符串命令#########################
编号 	命令 	描述说明
1 	SET key value 	此命令设置指定键的值。
2 	GET key 	获取指定键的值。
3 	GETRANGE key start end 	获取存储在键上的字符串的子字符串。
4 	GETSET key value 	设置键的字符串值并返回其旧值。
5 	GETBIT key offset 	返回在键处存储的字符串值中偏移处的位值。
6 	MGET key1 [key2..] 	获取所有给定键的值
7 	SETBIT key offset value 	存储在键上的字符串值中设置或清除偏移处的位
8 	SETEX key seconds value 	使用键和到期时间来设置值
9 	SETNX key value 	设置键的值，仅当键不存在时
10 	SETRANGE key offset value 	在指定偏移处开始的键处覆盖字符串的一部分
11 	STRLEN key 	获取存储在键中的值的长度
12 	MSET key value [key value …] 	为多个键分别设置它们的值
13 	MSETNX key value [key value …] 	为多个键分别设置它们的值，仅当键不存在时
14 	PSETEX key milliseconds value 	设置键的值和到期时间(以毫秒为单位)
15 	INCR key 	将键的整数值增加1
16 	INCRBY key increment 	将键的整数值按给定的数值增加
17 	INCRBYFLOAT key increment 	将键的浮点值按给定的数值增加
18 	DECR key 	将键的整数值减1
19 	DECRBY key decrement 	按给定数值减少键的整数值
20 	APPEND key value 	将指定值附加到键

##################哈希命令#########################
序号 	命令 	说明
1 	HDEL key field2 [field2] 	删除一个或多个哈希字段。
2 	HEXISTS key field 	判断是否存在散列字段。
3 	HGET key field 	获取存储在指定键的哈希字段的值。
4 	HGETALL key 	获取存储在指定键的哈希中的所有字段和值
5 	HINCRBY key field increment 	将哈希字段的整数值按给定数字增加
6 	HINCRBYFLOAT key field increment 	将哈希字段的浮点值按给定数值增加
7 	HKEYS key 	获取哈希中的所有字段
8 	HLEN key 	获取散列中的字段数量
9 	HMGET key field1 [field2] 	获取所有给定哈希字段的值
10 	HMSET key field1 value1 [field2 value2 ] 	为多个哈希字段分别设置它们的值
11 	HSET key field value 	设置散列字段的字符串值
12 	HSETNX key field value 	仅当字段不存在时，才设置散列字段的值
13 	HVALS key 	获取哈希中的所有值

################列表命令###########################
序号 	命令 	说明
1 	HDEL key field2 [field2] 	删除一个或多个哈希字段。
2 	HEXISTS key field 	判断是否存在散列字段。
3 	HGET key field 	获取存储在指定键的哈希字段的值。
4 	HGETALL key 	获取存储在指定键的哈希中的所有字段和值
5 	HINCRBY key field increment 	将哈希字段的整数值按给定数字增加
6 	HINCRBYFLOAT key field increment 	将哈希字段的浮点值按给定数值增加
7 	HKEYS key 	获取哈希中的所有字段
8 	HLEN key 	获取散列中的字段数量
9 	HMGET key field1 [field2] 	获取所有给定哈希字段的值
10 	HMSET key field1 value1 [field2 value2 ] 	为多个哈希字段分别设置它们的值
11 	HSET key field value 	设置散列字段的字符串值
12 	HSETNX key field value 	仅当字段不存在时，才设置散列字段的值
13 	HVALS key 	获取哈希中的所有值


################集合命令####################
序号 	命令 	说明
1 	SADD key member1 [member2] 	将一个或多个成员添加到集合
2 	SCARD key 	获取集合中的成员数
3 	SDIFF key1 [key2] 	减去多个集合
4 	SDIFFSTORE destination key1 [key2] 	减去多个集并将结果集存储在键中
5 	SINTER key1 [key2] 	相交多个集合
6 	SINTERSTORE destination key1 [key2] 	交叉多个集合并将结果集存储在键中
7 	SISMEMBER key member 	判断确定给定值是否是集合的成员
8 	SMOVE source destination member 	将成员从一个集合移动到另一个集合
9 	SPOP key 	从集合中删除并返回随机成员
10 	SRANDMEMBER key [count] 	从集合中获取一个或多个随机成员
11 	SREM key member1 [member2] 	从集合中删除一个或多个成员
12 	SUNION key1 [key2] 	添加多个集合
13 	SUNIONSTORE destination key1 [key2] 	添加多个集并将结果集存储在键中
14 	SSCAN key cursor [MATCH pattern] [COUNT count] 	递增地迭代集合中的元素

###################HyperLogLog命令##################
序号 	命令 	说明
1 	PFADD key element [element …] 	将指定的元素添加到指定的HyperLogLog 中。
2 	PFCOUNT key [key …] 	返回给定 HyperLogLog 的基数估算值。
3 	PFMERGE destkey sourcekey [sourcekey …] 	将多个 HyperLogLog 合并为一个 HyperLogLog

####################Redis发布订阅命令##############################
序号 	命令 	说明
1 	PSUBSCRIBE pattern [pattern …] 	订阅一个或多个符合给定模式的频道。
2 	PUBSUB subcommand [argument [argument …]] 	查看订阅与发布系统状态。
3 	PUBLISH channel message 	将信息发送到指定的频道。
4 	PUNSUBSCRIBE [pattern [pattern …]] 	退订所有给定模式的频道。
5 	SUBSCRIBE channel [channel …] 	订阅给定的一个或多个频道的信息。
6 	UNSUBSCRIBE [channel [channel …]] 	退订给定的频道。

####################Redis事务命令###################################
序号 	命令 	说明
1 	DISCARD 	丢弃在MULTI之后发出的所有命令
2 	EXEC 	执行MULTI后发出的所有命令
3 	MULTI 	标记事务块的开始
4 	UNWATCH 	取消 WATCH 命令对所有 key 的监视。
5 	WATCH key [key …] 	监视给定的键以确定MULTI / EXEC块的执行

#####################redis脚本命令################################
序号 	命令 	说明
1 	EVAL script numkeys key [key …] arg [arg …] 	执行一个Lua脚本。
2 	EVALSHA sha1 numkeys key [key …] arg [arg …] 	执行一个Lua脚本。
3 	SCRIPT EXISTS script [script …] 	检查脚本缓存中是否存在脚本。
4 	SCRIPT FLUSH 	从脚本缓存中删除所有脚本。
5 	SCRIPT KILL 	杀死当前正在执行的脚本。
6 	SCRIPT LOAD script 	将指定的Lua脚本加载到脚本缓存中。

#####################redis连接命令################################
序号 	命令 	说明
1 	AUTH password 	使用给定的密码验证服务器
2 	ECHO message 	打印给定的字符串信息
3 	PING 	检查服务器是否正在运行
4 	QUIT 	关闭当前连接
5 	SELECT index 	更改当前连接的所选数据库

#####################redis服务器命令################################
序号 	命令 	说明
1 	BGREWRITEAOF 	异步重写仅追加的文件
2 	BGSAVE 	将数据集异步保存到磁盘
3 	CLIENT KILL [ip:port] [ID client-id] 	杀死或断开指定的客户端的连接
4 	CLIENT LIST 	获取到服务器的客户端连接列表
5 	CLIENT GETNAME 	获取当前连接的名称
6 	CLIENT PAUSE timeout 	在指定时间内停止处理来自客户端的命令
7 	CLIENT SETNAME connection-name 	设置当前连接名称
8 	CLUSTER SLOTS 	获取群集插槽到节点映射的数组
9 	COMMAND 	获取Redis命令详细信息的数组
10 	COMMAND COUNT 	获取Redis命令的总数
11 	COMMAND GETKEYS 	提取键给出一个完整的Redis的命令
12 	BGSAVE 	将数据集异步保存到磁盘
13 	COMMAND INFO command-name [command-name …] 	获取特定Redis命令详细信息的数组
14 	CONFIG GET parameter 	获取配置参数的值
15 	CONFIG REWRITE 	使用内存中配置来重写配置文件
16 	CONFIG SET parameter value 	将配置参数设置为给定值
17 	CONFIG RESETSTAT 	重置由INFO返回的统计信息
18 	DBSIZE 	返回所选数据库中的键数量
19 	DEBUG OBJECT key 	获取有关键的调试信息
20 	DEBUG SEGFAULT 	使服务器崩溃
21 	FLUSHALL 	从所有数据库中删除所有键
22 	FLUSHDB 	删除当前数据库中的所有键
23 	INFO [section] 	获取有关服务器的信息和统计信息
24 	LASTSAVE 	获取上次成功保存到磁盘的UNIX时间戳
25 	MONITOR 	监听服务器实时接收的所有请求
26 	ROLE 	返回实例在复制上下文中的角色
27 	SAVE 	将数据集同步保存到磁盘
28 	SHUTDOWN [NOSAVE] [SAVE] 	将数据集同步保存到磁盘，然后关闭服务器
29 	SLAVEOF host port 	使服务器成为另一个实例的从属，或将其提升作为主服务器
30 	SLOWLOG subcommand [argument] 	管理Redis慢查询日志
31 	SYNC 	用于复制的命令
32 	TIME 	返回当前服务器的时间

##################Redis基准###############################
$ redis-benchmark [option] [option value]
序号 	选项 	说明 	                     默认值
1 	-h 	指定服务器主机名 	                127.0.0.1
2 	-p 	指定服务器端口                  	  6379
3 	-s 	指定服务器套接字 	
4 	-c 	指定并行连接的数量                 	   50
5 	-n 	指定请求的总数 	                      10000
6 	-d 	指定SET/GET值的数据大小(以字节为单位) 	2
7 	-k 	1=keep alive, 0=reconnect 	1
8 	-r 	使用SET/GET/INCR的随机键，SADD的随机值 	
9 	-p 	管道<numreq>请求 	1
10 	-h 	指定服务器主机名 	
11 	-q 	强制让Redis安装。 只显示query/sec值 	
12 	--csv 	以CSV格式输出 	
13 	-l 	生成循环，永久运行测试 	
14 	-t 	只运行逗号分隔的测试列表 	
15 	-I 	空闲模式。 只打开N个空闲连接并等待

##################Redis客户端命令#####################
编号 	命令 	描述
1 	CLIENT LIST 	返回连接到Redis服务器的客户端列表
2 	CLIENT SETNAME 	为当前连接分配/设置新的名称
3 	CLIENT GETNAME 	返回由CLIENT SETNAME设置的当前连接的名称
4 	CLIENT PAUSE 	这是一个连接控制命令，能够将所有Redis客户端按指定的时间量(以毫秒为单位)挂起
5 	CLIENT KILL 	此命令关闭指定的客户端连接。
